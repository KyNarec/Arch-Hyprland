[33m[NOTE][m Installing linux-headers ...
Sync Explicit (1): linux-headers-6.9.5.arch1-1
Sync Explicit (1): linux-headers-6.9.5.arch1-1
resolving dependencies...
resolving dependencies...
looking for conflicting packages...
looking for conflicting packages...

Packages (2) pahole-1:1.27-1  linux-headers-6.9.5.arch1-1

Total Download Size:    25.97 MiB
Total Installed Size:  131.76 MiB

:: Proceed with installation? [Y/n] 
Packages (2) pahole-1:1.27-1  linux-headers-6.9.5.arch1-1

Total Download Size:    25.97 MiB
Total Installed Size:  131.76 MiB

:: Proceed with installation? [Y/n] 
:: Retrieving packages...

:: Retrieving packages...
 linux-headers-6.9.5.arch1-1-x86_64 downloading...
 pahole-1:1.27-1-x86_64 downloading...
checking keyring...
 linux-headers-6.9.5.arch1-1-x86_64 downloading...
 pahole-1:1.27-1-x86_64 downloading...
checking keyring...
checking package integrity...
checking package integrity...
loading package files...
loading package files...
checking for file conflicts...
checking for file conflicts...
checking available disk space...
checking available disk space...
:: Processing package changes...
installing pahole...
:: Processing package changes...
installing pahole...
Optional dependencies for pahole
    ostra-cg: Generate call graphs from encoded traces
installing linux-headers...
Optional dependencies for pahole
    ostra-cg: Generate call graphs from encoded traces
installing linux-headers...
:: Running post-transaction hooks...
(1/2) Arming ConditionNeedsUpdate...
:: Running post-transaction hooks...
(1/2) Arming ConditionNeedsUpdate...
(2/2) Updating module dependencies...
(2/2) Updating module dependencies...
[1A[K[32m[OK][m linux-headers was installed.
[33m[NOTE][m Installing nvidia-dkms ...
Sync Explicit (1): nvidia-dkms-550.90.07-3
Sync Explicit (1): nvidia-dkms-550.90.07-3
resolving dependencies...
resolving dependencies...
looking for conflicting packages...
looking for conflicting packages...
warning: dependency cycle detected:
warning: eglexternalplatform will be installed before its nvidia-utils dependency

Packages (5) dkms-3.0.12-1  egl-wayland-2:1.1.13-2  eglexternalplatform-1.1-3  nvidia-utils-550.90.07-3  nvidia-dkms-550.90.07-3

Total Download Size:   261.00 MiB
Total Installed Size:  662.52 MiB

:: Proceed with installation? [Y/n] warning: dependency cycle detected:
warning: eglexternalplatform will be installed before its nvidia-utils dependency

Packages (5) dkms-3.0.12-1  egl-wayland-2:1.1.13-2  eglexternalplatform-1.1-3  nvidia-utils-550.90.07-3  nvidia-dkms-550.90.07-3

Total Download Size:   261.00 MiB
Total Installed Size:  662.52 MiB

:: Proceed with installation? [Y/n] 
:: Retrieving packages...

:: Retrieving packages...
 nvidia-utils-550.90.07-3-x86_64 downloading...
 nvidia-dkms-550.90.07-3-x86_64 downloading...
 dkms-3.0.12-1-any downloading...
 egl-wayland-2:1.1.13-2-x86_64 downloading...
 eglexternalplatform-1.1-3-any downloading...
checking keyring...
 nvidia-utils-550.90.07-3-x86_64 downloading...
 nvidia-dkms-550.90.07-3-x86_64 downloading...
 dkms-3.0.12-1-any downloading...
 egl-wayland-2:1.1.13-2-x86_64 downloading...
 eglexternalplatform-1.1-3-any downloading...
checking keyring...
checking package integrity...
checking package integrity...
loading package files...
loading package files...
checking for file conflicts...
checking for file conflicts...
checking available disk space...
checking available disk space...
:: Processing package changes...
installing dkms...
:: Processing package changes...
installing dkms...
Optional dependencies for dkms
    linux-headers: build modules against the Arch kernel [installed]
    linux-lts-headers: build modules against the LTS kernel
    linux-zen-headers: build modules against the ZEN kernel
    linux-hardened-headers: build modules against the HARDENED kernel
installing eglexternalplatform...
Optional dependencies for dkms
    linux-headers: build modules against the Arch kernel [installed]
    linux-lts-headers: build modules against the LTS kernel
    linux-zen-headers: build modules against the ZEN kernel
    linux-hardened-headers: build modules against the HARDENED kernel
installing eglexternalplatform...
installing egl-wayland...
installing egl-wayland...
installing nvidia-utils...
installing nvidia-utils...
If you run into trouble with CUDA not being available, run nvidia-modprobe first.
If you use GDM on Wayland, you might have to run systemctl enable --now nvidia-resume.service
If you run into trouble with CUDA not being available, run nvidia-modprobe first.
If you use GDM on Wayland, you might have to run systemctl enable --now nvidia-resume.service
Optional dependencies for nvidia-utils
    nvidia-settings: configuration tool
    xorg-server: Xorg support
    xorg-server-devel: nvidia-xconfig
    opencl-nvidia: OpenCL support
installing nvidia-dkms...
Optional dependencies for nvidia-utils
    nvidia-settings: configuration tool
    xorg-server: Xorg support
    xorg-server-devel: nvidia-xconfig
    opencl-nvidia: OpenCL support
installing nvidia-dkms...
:: Running post-transaction hooks...
(1/7) Creating system user accounts...
:: Running post-transaction hooks...
(1/7) Creating system user accounts...
Creating group 'nvidia-persistenced' with GID 143.
Creating group 'nvidia-persistenced' with GID 143.
Creating user 'nvidia-persistenced' (NVIDIA Persistence Daemon) with UID 143 and GID 143.
Creating user 'nvidia-persistenced' (NVIDIA Persistence Daemon) with UID 143 and GID 143.
(2/7) Reloading system manager configuration...
(2/7) Reloading system manager configuration...
(3/7) Reloading device manager configuration...
(3/7) Reloading device manager configuration...
(4/7) Arming ConditionNeedsUpdate...
(4/7) Arming ConditionNeedsUpdate...
(5/7) Install DKMS modules
(5/7) Install DKMS modules
==> dkms install --no-depmod nvidia/550.90.07 -k 6.9.5-arch1-1
==> dkms install --no-depmod nvidia/550.90.07 -k 6.9.5-arch1-1
==> depmod 6.9.5-arch1-1
==> depmod 6.9.5-arch1-1
(6/7) Updating linux initcpios...
(6/7) Updating linux initcpios...
==> Building image from preset: /etc/mkinitcpio.d/linux.preset: 'default'
==> Using default configuration file: '/etc/mkinitcpio.conf'
  -> -k /boot/vmlinuz-linux -g /boot/initramfs-linux.img
==> Building image from preset: /etc/mkinitcpio.d/linux.preset: 'default'
==> Using default configuration file: '/etc/mkinitcpio.conf'
  -> -k /boot/vmlinuz-linux -g /boot/initramfs-linux.img
==> Starting build: '6.9.5-arch1-1'
==> Starting build: '6.9.5-arch1-1'
  -> Running build hook: [base]
  -> Running build hook: [base]
  -> Running build hook: [udev]
  -> Running build hook: [udev]
  -> Running build hook: [autodetect]
  -> Running build hook: [autodetect]
  -> Running build hook: [microcode]
  -> Running build hook: [microcode]
  -> Running build hook: [keyboard]
  -> Running build hook: [keyboard]
==> WARNING: Possibly missing firmware for module: 'xhci_pci'
==> WARNING: Possibly missing firmware for module: 'xhci_pci'
  -> Running build hook: [keymap]
  -> Running build hook: [keymap]
  -> Running build hook: [modconf]
  -> Running build hook: [modconf]
  -> Running build hook: [block]
  -> Running build hook: [block]
  -> Running build hook: [filesystems]
  -> Running build hook: [filesystems]
  -> Running build hook: [fsck]
  -> Running build hook: [fsck]
==> Generating module dependencies
==> Generating module dependencies
==> Creating zstd-compressed initcpio image: '/boot/initramfs-linux.img'
==> Creating zstd-compressed initcpio image: '/boot/initramfs-linux.img'
  -> Early uncompressed CPIO image generation successful
  -> Early uncompressed CPIO image generation successful
==> Initcpio image generation successful
==> Initcpio image generation successful
==> Building image from preset: /etc/mkinitcpio.d/linux.preset: 'fallback'
==> Using default configuration file: '/etc/mkinitcpio.conf'
==> Building image from preset: /etc/mkinitcpio.d/linux.preset: 'fallback'
  -> -k /boot/vmlinuz-linux -g /boot/initramfs-linux-fallback.img -S autodetect
==> Using default configuration file: '/etc/mkinitcpio.conf'
  -> -k /boot/vmlinuz-linux -g /boot/initramfs-linux-fallback.img -S autodetect
==> Starting build: '6.9.5-arch1-1'
==> Starting build: '6.9.5-arch1-1'
  -> Running build hook: [base]
  -> Running build hook: [base]
  -> Running build hook: [udev]
  -> Running build hook: [udev]
  -> Running build hook: [microcode]
  -> Running build hook: [microcode]
  -> Running build hook: [keyboard]
  -> Running build hook: [keyboard]
==> WARNING: Possibly missing firmware for module: 'xhci_pci'
==> WARNING: Possibly missing firmware for module: 'xhci_pci'
  -> Running build hook: [keymap]
  -> Running build hook: [keymap]
  -> Running build hook: [modconf]
  -> Running build hook: [modconf]
  -> Running build hook: [block]
  -> Running build hook: [block]
==> WARNING: Possibly missing firmware for module: 'qed'
==> WARNING: Possibly missing firmware for module: 'qed'
==> WARNING: Possibly missing firmware for module: 'aic94xx'
==> WARNING: Possibly missing firmware for module: 'aic94xx'
==> WARNING: Possibly missing firmware for module: 'qla1280'
==> WARNING: Possibly missing firmware for module: 'qla1280'
==> WARNING: Possibly missing firmware for module: 'wd719x'
==> WARNING: Possibly missing firmware for module: 'wd719x'
==> WARNING: Possibly missing firmware for module: 'qla2xxx'
==> WARNING: Possibly missing firmware for module: 'qla2xxx'
==> WARNING: Possibly missing firmware for module: 'bfa'
==> WARNING: Possibly missing firmware for module: 'bfa'
  -> Running build hook: [filesystems]
  -> Running build hook: [filesystems]
  -> Running build hook: [fsck]
  -> Running build hook: [fsck]
==> Generating module dependencies
==> Generating module dependencies
==> Creating zstd-compressed initcpio image: '/boot/initramfs-linux-fallback.img'
==> Creating zstd-compressed initcpio image: '/boot/initramfs-linux-fallback.img'
  -> Early uncompressed CPIO image generation successful
  -> Early uncompressed CPIO image generation successful
==> Initcpio image generation successful
==> Initcpio image generation successful
(7/7) Reloading system bus configuration...
(7/7) Reloading system bus configuration...
[1A[K[32m[OK][m nvidia-dkms was installed.
[33m[NOTE][m Installing nvidia-settings ...
Sync Explicit (1): nvidia-settings-550.78-1
Sync Explicit (1): nvidia-settings-550.78-1
resolving dependencies...
resolving dependencies...
looking for conflicting packages...
looking for conflicting packages...

Packages (2) libxnvctrl-550.78-1  nvidia-settings-550.78-1

Total Download Size:   0.81 MiB
Total Installed Size:  1.92 MiB

:: Proceed with installation? [Y/n] 
:: Retrieving packages...

Packages (2) libxnvctrl-550.78-1  nvidia-settings-550.78-1

Total Download Size:   0.81 MiB
Total Installed Size:  1.92 MiB

:: Proceed with installation? [Y/n] 
:: Retrieving packages...
 nvidia-settings-550.78-1-x86_64 downloading...
 libxnvctrl-550.78-1-x86_64 downloading...
checking keyring...
 nvidia-settings-550.78-1-x86_64 downloading...
 libxnvctrl-550.78-1-x86_64 downloading...
checking keyring...
checking package integrity...
checking package integrity...
loading package files...
loading package files...
checking for file conflicts...
checking available disk space...
checking for file conflicts...
:: Processing package changes...
installing libxnvctrl...
checking available disk space...
:: Processing package changes...
installing libxnvctrl...
installing nvidia-settings...
installing nvidia-settings...
:: Running post-transaction hooks...
(1/2) Arming ConditionNeedsUpdate...
:: Running post-transaction hooks...
(1/2) Arming ConditionNeedsUpdate...
(2/2) Updating the desktop file MIME type cache...
(2/2) Updating the desktop file MIME type cache...
[1A[K[32m[OK][m nvidia-settings was installed.
[32m[OK][m nvidia-utils is already installed. Skipping...
[32m[OK][m libva is already installed. Skipping...
[33m[NOTE][m Installing libva-nvidia-driver-git ...
AUR Explicit (1): libva-nvidia-driver-git-0.0.12.r11.gf3205bd-1
Sync Make Dependency (1): ffnvcodec-headers-12.2.72.0-1
AUR Explicit (1): libva-nvidia-driver-git-0.0.12.r11.gf3205bd-1
Sync Make Dependency (1): ffnvcodec-headers-12.2.72.0-1
:: [1m(1/1) Downloaded PKGBUILD: libva-nvidia-driver-git[0m
:: [1m(1/1) Downloaded PKGBUILD: libva-nvidia-driver-git[0m
  1 libva-nvidia-driver-git                  (Build Files Exist)
==> Packages to cleanBuild?
==> [N]one [A]ll [Ab]ort [I]nstalled [No]tInstalled or (1 2 3, 1-3, ^4)
==> 
  1 libva-nvidia-driver-git                  (Build Files Exist)
==> Diffs to show?
==> [N]one [A]ll [Ab]ort [I]nstalled [No]tInstalled or (1 2 3, 1-3, ^4)
==> 
  1 libva-nvidia-driver-git                  (Build Files Exist)
==> Packages to cleanBuild?
==> [N]one [A]ll [Ab]ort [I]nstalled [No]tInstalled or (1 2 3, 1-3, ^4)
==> 
  1 libva-nvidia-driver-git                  (Build Files Exist)
==> Diffs to show?
==> [N]one [A]ll [Ab]ort [I]nstalled [No]tInstalled or (1 2 3, 1-3, ^4)
==> 
==> Making package: libva-nvidia-driver-git 0.0.12.r11.gf3205bd-1 (Fri 21 Jun 2024 07:54:15 PM CEST)
==> Making package: libva-nvidia-driver-git 0.0.12.r11.gf3205bd-1 (Fri 21 Jun 2024 07:54:15 PM CEST)
==> Retrieving sources...
==> Retrieving sources...
  -> Cloning libva-nvidia-driver-git git repo...
  -> Cloning libva-nvidia-driver-git git repo...
Cloning into bare repository '/home/simon/.cache/yay/libva-nvidia-driver-git/libva-nvidia-driver-git'...
Cloning into bare repository '/home/simon/.cache/yay/libva-nvidia-driver-git/libva-nvidia-driver-git'...
==> WARNING: Skipping verification of source file PGP signatures.
==> WARNING: Skipping verification of source file PGP signatures.
==> Validating source files with sha256sums...
==> Validating source files with sha256sums...
    libva-nvidia-driver-git ...     libva-nvidia-driver-git ... Skipped
Skipped
:: [1m(1/1) Parsing SRCINFO: libva-nvidia-driver-git[0m
:: [1m(1/1) Parsing SRCINFO: libva-nvidia-driver-git[0m
resolving dependencies...
looking for conflicting packages...
resolving dependencies...
looking for conflicting packages...

Packages (1) ffnvcodec-headers-12.2.72.0-1

Total Download Size:   0.07 MiB
Total Installed Size:  0.42 MiB

:: Proceed with installation? [Y/n] 
:: Retrieving packages...

Packages (1) ffnvcodec-headers-12.2.72.0-1

Total Download Size:   0.07 MiB
Total Installed Size:  0.42 MiB

:: Proceed with installation? [Y/n] 
:: Retrieving packages...
 ffnvcodec-headers-12.2.72.0-1-any downloading...
checking keyring...
 ffnvcodec-headers-12.2.72.0-1-any downloading...
checking keyring...
checking package integrity...
checking package integrity...
loading package files...
checking for file conflicts...
checking available disk space...
loading package files...
:: Processing package changes...
installing ffnvcodec-headers...
checking for file conflicts...
checking available disk space...
:: Processing package changes...
installing ffnvcodec-headers...
:: Running post-transaction hooks...
(1/1) Arming ConditionNeedsUpdate...
:: Running post-transaction hooks...
(1/1) Arming ConditionNeedsUpdate...
==> Making package: libva-nvidia-driver-git 0.0.12.r11.gf3205bd-1 (Fri 21 Jun 2024 07:54:17 PM CEST)
==> Making package: libva-nvidia-driver-git 0.0.12.r11.gf3205bd-1 (Fri 21 Jun 2024 07:54:17 PM CEST)
==> Checking runtime dependencies...
==> Checking runtime dependencies...
==> Checking buildtime dependencies...
==> Checking buildtime dependencies...
==> Retrieving sources...
==> Retrieving sources...
  -> Updating libva-nvidia-driver-git git repo...
  -> Updating libva-nvidia-driver-git git repo...
==> Validating source files with sha256sums...
    libva-nvidia-driver-git ... ==> Validating source files with sha256sums...
    libva-nvidia-driver-git ... Skipped
Skipped
==> Removing existing $srcdir/ directory...
==> Removing existing $srcdir/ directory...
==> Extracting sources...
==> Extracting sources...
  -> Creating working copy of libva-nvidia-driver-git git repo...
  -> Creating working copy of libva-nvidia-driver-git git repo...
Cloning into 'libva-nvidia-driver-git'...
Cloning into 'libva-nvidia-driver-git'...
done.
done.
==> Starting pkgver()...
==> Starting pkgver()...
==> Sources are ready.
==> Sources are ready.
==> Making package: libva-nvidia-driver-git 0.0.12.r11.gf3205bd-1 (Fri 21 Jun 2024 07:54:19 PM CEST)
==> Making package: libva-nvidia-driver-git 0.0.12.r11.gf3205bd-1 (Fri 21 Jun 2024 07:54:19 PM CEST)
==> Checking runtime dependencies...
==> Checking runtime dependencies...
==> Checking buildtime dependencies...
==> Checking buildtime dependencies...
==> WARNING: Using existing $srcdir/ tree
==> WARNING: Using existing $srcdir/ tree
==> Starting pkgver()...
==> Starting pkgver()...
==> Starting build()...
==> Starting build()...
+ exec meson setup --prefix /usr --libexecdir lib --sbindir bin --buildtype plain --auto-features enabled --wrap-mode nodownload -D b_pie=true -D python.bytecompile=1 . build
+ exec meson setup --prefix /usr --libexecdir lib --sbindir bin --buildtype plain --auto-features enabled --wrap-mode nodownload -D b_pie=true -D python.bytecompile=1 . build
The Meson build system
Version: 1.4.1
Source dir: /home/simon/.cache/yay/libva-nvidia-driver-git/src/libva-nvidia-driver-git
Build dir: /home/simon/.cache/yay/libva-nvidia-driver-git/src/libva-nvidia-driver-git/build
Build type: native build
Project name: nvidia-vaapi-driver
Project version: 0.1
C compiler for the host machine: cc (gcc 14.1.1 "cc (GCC) 14.1.1 20240522")
C linker for the host machine: cc ld.bfd 2.42.0
Host machine cpu family: x86_64
Host machine cpu: x86_64
Library m found: YES
Library dl found: YES
Found pkg-config: YES (/usr/bin/pkg-config) 2.1.1
Run-time dependency egl found: YES 1.5
Run-time dependency ffnvcodec found: YES 12.2.72.0
Run-time dependency libdrm found: YES 2.4.121
Run-time dependency threads found: YES
Run-time dependency libva found: YES 1.21.0
Run-time dependency gstreamer-codecparsers-1.0 found: YES 1.24.3
Compiler for C supports arguments -Wno-missing-field-initializers: YES 
Compiler for C supports arguments -Wno-unused-parameter: YES 
Compiler for C supports arguments -Werror=format: YES 
Compiler for C supports arguments -Werror=format-security: YES 
Compiler for C supports arguments -Werror=incompatible-pointer-types: YES 
Compiler for C supports arguments -Werror=init-self: YES 
Compiler for C supports arguments -Werror=int-conversion: YES 
Compiler for C supports arguments -Werror=missing-declarations: YES 
Compiler for C supports arguments -Werror=missing-prototypes: YES 
Compiler for C supports arguments -Werror=pointer-arith: YES 
Compiler for C supports arguments -Werror=undef: YES 
Compiler for C supports arguments -Werror=vla: YES 
Compiler for C supports arguments -Wsuggest-attribute=format: YES 
Compiler for C supports arguments -Wwrite-strings: YES 
Build targets in project: 1

nvidia-vaapi-driver 0.1

  User defined options
    auto_features     : enabled
    buildtype         : plain
    libexecdir        : lib
    prefix            : /usr
    sbindir           : bin
    wrap_mode         : nodownload
    python.bytecompile: 1
    b_pie             : true

Found ninja-1.12.1 at /usr/bin/ninja
Generating targets:   0%|          | 0/1 eta ?                                              Writing build.ninja:   0%|          | 0/41 eta ?                                                The Meson build system
Version: 1.4.1
Source dir: /home/simon/.cache/yay/libva-nvidia-driver-git/src/libva-nvidia-driver-git
Build dir: /home/simon/.cache/yay/libva-nvidia-driver-git/src/libva-nvidia-driver-git/build
Build type: native build
Project name: nvidia-vaapi-driver
Project version: 0.1
C compiler for the host machine: cc (gcc 14.1.1 "cc (GCC) 14.1.1 20240522")
C linker for the host machine: cc ld.bfd 2.42.0
Host machine cpu family: x86_64
Host machine cpu: x86_64
Library m found: YES
Library dl found: YES
Found pkg-config: YES (/usr/bin/pkg-config) 2.1.1
Run-time dependency egl found: YES 1.5
Run-time dependency ffnvcodec found: YES 12.2.72.0
Run-time dependency libdrm found: YES 2.4.121
Run-time dependency threads found: YES
Run-time dependency libva found: YES 1.21.0
Run-time dependency gstreamer-codecparsers-1.0 found: YES 1.24.3
Compiler for C supports arguments -Wno-missing-field-initializers: YES 
Compiler for C supports arguments -Wno-unused-parameter: YES 
Compiler for C supports arguments -Werror=format: YES 
Compiler for C supports arguments -Werror=format-security: YES 
Compiler for C supports arguments -Werror=incompatible-pointer-types: YES 
Compiler for C supports arguments -Werror=init-self: YES 
Compiler for C supports arguments -Werror=int-conversion: YES 
Compiler for C supports arguments -Werror=missing-declarations: YES 
Compiler for C supports arguments -Werror=missing-prototypes: YES 
Compiler for C supports arguments -Werror=pointer-arith: YES 
Compiler for C supports arguments -Werror=undef: YES 
Compiler for C supports arguments -Werror=vla: YES 
Compiler for C supports arguments -Wsuggest-attribute=format: YES 
Compiler for C supports arguments -Wwrite-strings: YES 
Build targets in project: 1

nvidia-vaapi-driver 0.1

  User defined options
    auto_features     : enabled
    buildtype         : plain
    libexecdir        : lib
    prefix            : /usr
    sbindir           : bin
    wrap_mode         : nodownload
    python.bytecompile: 1
    b_pie             : true

Found ninja-1.12.1 at /usr/bin/ninja
Generating targets:   0%|          | 0/1 eta ?                                              Writing build.ninja:   0%|          | 0/41 eta ?                                                ninja: Entering directory `/home/simon/.cache/yay/libva-nvidia-driver-git/src/libva-nvidia-driver-git/build'
ninja: Entering directory `/home/simon/.cache/yay/libva-nvidia-driver-git/src/libva-nvidia-driver-git/build'
[1/16] Compiling C object nvidia_drv_video.so.p/src_list.c.o
[1/16] Compiling C object nvidia_drv_video.so.p/src_list.c.o
[2/16] Compiling C object nvidia_drv_video.so.p/src_backend-common.c.o
[2/16] Compiling C object nvidia_drv_video.so.p/src_backend-common.c.o
[3/16] Compiling C object nvidia_drv_video.so.p/src_h264.c.o
[3/16] Compiling C object nvidia_drv_video.so.p/src_h264.c.o
[4/16] Compiling C object nvidia_drv_video.so.p/src_vc1.c.o
[4/16] Compiling C object nvidia_drv_video.so.p/src_vc1.c.o
[5/16] Compiling C object nvidia_drv_video.so.p/src_vp8.c.o
[5/16] Compiling C object nvidia_drv_video.so.p/src_vp8.c.o
[6/16] Compiling C object nvidia_drv_video.so.p/src_mpeg2.c.o
[6/16] Compiling C object nvidia_drv_video.so.p/src_mpeg2.c.o
[7/16] Compiling C object nvidia_drv_video.so.p/src_jpeg.c.o
[8/16] Compiling C object nvidia_drv_video.so.p/src_hevc.c.o
[7/16] Compiling C object nvidia_drv_video.so.p/src_jpeg.c.o
[8/16] Compiling C object nvidia_drv_video.so.p/src_hevc.c.o
[9/16] Compiling C object nvidia_drv_video.so.p/src_mpeg4.c.o
[9/16] Compiling C object nvidia_drv_video.so.p/src_mpeg4.c.o
[10/16] Compiling C object nvidia_drv_video.so.p/src_export-buf.c.o
[10/16] Compiling C object nvidia_drv_video.so.p/src_export-buf.c.o
[11/16] Compiling C object nvidia_drv_video.so.p/src_av1.c.o
[11/16] Compiling C object nvidia_drv_video.so.p/src_av1.c.o
[12/16] Compiling C object nvidia_drv_video.so.p/src_direct_direct-export-buf.c.o
[12/16] Compiling C object nvidia_drv_video.so.p/src_direct_direct-export-buf.c.o
[13/16] Compiling C object nvidia_drv_video.so.p/src_direct_nv-driver.c.o
[13/16] Compiling C object nvidia_drv_video.so.p/src_direct_nv-driver.c.o
[14/16] Compiling C object nvidia_drv_video.so.p/src_vp9.c.o
[14/16] Compiling C object nvidia_drv_video.so.p/src_vp9.c.o
[15/16] Compiling C object nvidia_drv_video.so.p/src_vabackend.c.o
[15/16] Compiling C object nvidia_drv_video.so.p/src_vabackend.c.o
[16/16] Linking target nvidia_drv_video.so
[16/16] Linking target nvidia_drv_video.so
INFO: autodetecting backend as ninja
INFO: calculating backend command to run: /usr/bin/ninja -C /home/simon/.cache/yay/libva-nvidia-driver-git/src/libva-nvidia-driver-git/build
INFO: autodetecting backend as ninja
INFO: calculating backend command to run: /usr/bin/ninja -C /home/simon/.cache/yay/libva-nvidia-driver-git/src/libva-nvidia-driver-git/build
==> Entering fakeroot environment...
==> Entering fakeroot environment...
==> Starting package()...
==> Starting package()...
ninja: Entering directory `/home/simon/.cache/yay/libva-nvidia-driver-git/src/libva-nvidia-driver-git/build'
ninja: Entering directory `/home/simon/.cache/yay/libva-nvidia-driver-git/src/libva-nvidia-driver-git/build'
ninja: no work to do.
ninja: no work to do.
Installing nvidia_drv_video.so to /home/simon/.cache/yay/libva-nvidia-driver-git/pkg/libva-nvidia-driver-git/usr/lib/dri
Installing nvidia_drv_video.so to /home/simon/.cache/yay/libva-nvidia-driver-git/pkg/libva-nvidia-driver-git/usr/lib/dri
==> Tidying install...
==> Tidying install...
  -> Removing libtool files...
  -> Removing libtool files...
  -> Purging unwanted files...
  -> Purging unwanted files...
  -> Removing static library files...
  -> Removing static library files...
  -> Stripping unneeded symbols from binaries and libraries...
  -> Stripping unneeded symbols from binaries and libraries...
  -> Compressing man and info pages...
  -> Compressing man and info pages...
==> Checking for packaging issues...
==> Checking for packaging issues...
==> Creating package "libva-nvidia-driver-git"...
==> Creating package "libva-nvidia-driver-git"...
  -> Generating .PKGINFO file...
  -> Generating .PKGINFO file...
  -> Generating .BUILDINFO file...
  -> Generating .BUILDINFO file...
  -> Generating .MTREE file...
  -> Generating .MTREE file...
  -> Compressing package...
  -> Compressing package...
==> Creating package "libva-nvidia-driver-git-debug"...
==> Creating package "libva-nvidia-driver-git-debug"...
  -> Generating .PKGINFO file...
  -> Generating .PKGINFO file...
  -> Generating .BUILDINFO file...
  -> Generating .BUILDINFO file...
  -> Generating .MTREE file...
  -> Generating .MTREE file...
  -> Compressing package...
  -> Compressing package...
==> Leaving fakeroot environment.
==> Leaving fakeroot environment.
==> Finished making: libva-nvidia-driver-git 0.0.12.r11.gf3205bd-1 (Fri 21 Jun 2024 07:54:23 PM CEST)
==> Finished making: libva-nvidia-driver-git 0.0.12.r11.gf3205bd-1 (Fri 21 Jun 2024 07:54:23 PM CEST)
==> Cleaning up...
==> Cleaning up...
loading packages...
resolving dependencies...
loading packages...
resolving dependencies...
looking for conflicting packages...
looking for conflicting packages...

Packages (2) libva-nvidia-driver-git-0.0.12.r11.gf3205bd-1  libva-nvidia-driver-git-debug-0.0.12.r11.gf3205bd-1

Total Installed Size:  1.16 MiB

:: Proceed with installation? [Y/n] 
checking keyring...
checking package integrity...
loading package files...
checking for file conflicts...
checking available disk space...
:: Processing package changes...
installing libva-nvidia-driver-git...
installing libva-nvidia-driver-git-debug...

Packages (2) libva-nvidia-driver-git-0.0.12.r11.gf3205bd-1  libva-nvidia-driver-git-debug-0.0.12.r11.gf3205bd-1

Total Installed Size:  1.16 MiB

:: Proceed with installation? [Y/n] 
checking keyring...
checking package integrity...
loading package files...
checking for file conflicts...
checking available disk space...
:: Processing package changes...
installing libva-nvidia-driver-git...
installing libva-nvidia-driver-git-debug...
:: Running post-transaction hooks...
(1/1) Arming ConditionNeedsUpdate...
:: Running post-transaction hooks...
(1/1) Arming ConditionNeedsUpdate...
[1A[K[32m[OK][m libva-nvidia-driver-git was installed.
==> Building image from preset: /etc/mkinitcpio.d/linux.preset: 'default'
==> Using default configuration file: '/etc/mkinitcpio.conf'
  -> -k /boot/vmlinuz-linux -g /boot/initramfs-linux.img
==> Starting build: '6.9.5-arch1-1'
  -> Running build hook: [base]
  -> Running build hook: [udev]
  -> Running build hook: [autodetect]
  -> Running build hook: [microcode]
  -> Running build hook: [keyboard]
==> WARNING: Possibly missing firmware for module: 'xhci_pci'
  -> Running build hook: [keymap]
  -> Running build hook: [modconf]
  -> Running build hook: [block]
  -> Running build hook: [filesystems]
  -> Running build hook: [fsck]
==> Generating module dependencies
==> Creating zstd-compressed initcpio image: '/boot/initramfs-linux.img'
  -> Early uncompressed CPIO image generation successful
==> Initcpio image generation successful
==> Building image from preset: /etc/mkinitcpio.d/linux.preset: 'fallback'
==> Using default configuration file: '/etc/mkinitcpio.conf'
  -> -k /boot/vmlinuz-linux -g /boot/initramfs-linux-fallback.img -S autodetect
==> Starting build: '6.9.5-arch1-1'
  -> Running build hook: [base]
  -> Running build hook: [udev]
  -> Running build hook: [microcode]
  -> Running build hook: [keyboard]
==> WARNING: Possibly missing firmware for module: 'xhci_pci'
  -> Running build hook: [keymap]
  -> Running build hook: [modconf]
  -> Running build hook: [block]
==> WARNING: Possibly missing firmware for module: 'qed'
==> WARNING: Possibly missing firmware for module: 'aic94xx'
==> WARNING: Possibly missing firmware for module: 'qla1280'
==> WARNING: Possibly missing firmware for module: 'wd719x'
==> WARNING: Possibly missing firmware for module: 'qla2xxx'
==> WARNING: Possibly missing firmware for module: 'bfa'
  -> Running build hook: [filesystems]
  -> Running build hook: [fsck]
==> Generating module dependencies
==> Creating zstd-compressed initcpio image: '/boot/initramfs-linux-fallback.img'
  -> Early uncompressed CPIO image generation successful
==> Initcpio image generation successful
options nvidia-drm modeset=1
blacklist nouveau
install nouveau /bin/true
